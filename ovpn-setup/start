#!/usr/bin/env bash

set -e

cd "$(dirname "$0")"

source ./helpers.sh
source ./vars.sh

box_out "Configuring OpenVPN. This might take a while."

./initpki

CA="$(cat "$EASYRSA_PKI/ca.crt")"
TA="$(cat "$EASYRSA_PKI/ta.key")"
CLIENT_PK="$(cat "$EASYRSA_PKI/private/$CLIENT_CN.key")"
CLIENT_CERT="$(openssl x509 -in "$EASYRSA_PKI/issued/$CLIENT_CN.crt")"

cat << EOF > "$OPENVPN/server.ovpn"
dev tun
port $OVPN_PORT
proto $OVPN_PROTO

ca $EASYRSA_PKI/ca.crt
cert $EASYRSA_PKI/issued/$SERVER_CN.crt
dh $EASYRSA_PKI/dh.pem
key $EASYRSA_PKI/private/$SERVER_CN.key
tls-auth $EASYRSA_PKI/ta.key 0

comp-lzo no
duplicate-cn
keepalive 10 60
persist-key
persist-tun
server $OVPN_NETWORK $OVPN_SUBNET_MASK

push "comp-lzo no"
push "route $NETWORK_ADDRESS $SUBNET_MASK"
EOF

mkdir -p "$CLIENT_CONFIG_DIR"
CLIENT_CONFIG_FILE="$CLIENT_CONFIG_DIR/$NETWORK_ADDRESS.ovpn"
cat << EOF > "$CLIENT_CONFIG_FILE"
client
dev tun
nobind
proto $OVPN_PROTO
remote $OVPN_SERVER_ADDRESS $OVPN_PORT

key-direction 1
persist-key
persist-tun
remote-cert-tls server

<key>
$CLIENT_PK
</key>
<cert>
$CLIENT_CERT
</cert>
<ca>
$CA
</ca>
<tls-auth>
$TA
</tls-auth>
EOF

box_out "Wrote client config to $CLIENT_CONFIG_FILE"

iptables -t nat -C POSTROUTING -o "$ETH_DEVICE" -j MASQUERADE || {
  iptables -t nat -A POSTROUTING -o "$ETH_DEVICE" -j MASQUERADE
}

mkdir -p /dev/net

if [ ! -c /dev/net/tun ]; then
  mknod /dev/net/tun c 10 200
fi

exec openvpn --config "$OPENVPN/server.ovpn"
